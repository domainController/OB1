{"version":3,"file":"Series.astro_astro_type_script_index_1_lang.C0cUgaxU.js","sources":["../../src/layouts/Series.astro?astro&type=script&index=1&lang.ts"],"sourcesContent":["  // Ждем загрузки контента\n  document.addEventListener(\"DOMContentLoaded\", () => {\n    const buttonsPanel = document.getElementById(\"buttons-panel\");\n    \n    if (buttonsPanel) {\n      buttonsPanel.classList.add(\"fixed\");\n      console.log(\"Класс 'fixed' добавлен к элементу buttons-panel.\");\n    } else {\n      console.error(\"Элемент с ID 'buttons-panel' не найден.\");\n    }\n  });\n\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,"],"names":["buttonsPanel"],"mappings":"AA6QE,SAAS,iBAAiB,mBAAoB,IAAM,CAC5C,MAAAA,EAAe,SAAS,eAAe,eAAe,EAExDA,GACWA,EAAA,UAAU,IAAI,OAAO,EAClC,QAAQ,IAAI,kDAA+B,GAE3C,QAAQ,MAAM,yCAAgC,CAElD,CAAC"}