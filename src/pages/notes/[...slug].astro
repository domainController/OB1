---
/**
 * Ce composant gère le rendu des pages de notes dynamiques, par exemple /notes/legal
 * Il utilise Astro.glob() pour charger tous les fichiers Markdown dans src/content/note/
 * Ensuite, il recherche la note dont le slug correspond à l'URL actuelle (params.slug)
 * Si aucune note ne correspond, il renvoie une AstroError 404
 */

 import Layout from "../../layouts/Base.astro"
import { MarkdownLayout } from "astro/components"
import { AstroError } from "astro/errors"

const notes = await Astro.glob("../../content/note/*.md")

// ⬇️ On extrait le paramètre dynamique de l’URL, ex: /notes/legal => slug = ['legal']
const slug = Astro.params.slug.join("/")

// ⬇️ On cherche la note correspondant à ce slug
const entry = notes.find(note => note.url === `/notes/${slug}`)

if (!entry) {
  // ⛔️ Si aucune note ne correspond, on déclenche une erreur 404 propre
  throw new AstroError(`Note not found: ${slug}`, { status: 404 })
}
---

<!-- ⬇️ Affichage de la page de note dynamiquement -->

<Layout title={entry.data.title}>
  <article>
    <h1>{entry.data.title}</h1>
    {entry.data.description && <p><em>{entry.data.description}</em></p>}
    <MarkdownLayout content={entry.body} />
  </article>
</Layout>